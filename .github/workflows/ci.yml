name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  GO_VERSION: '1.21'
  TF_ACC: '1'

jobs:
  # コード品質チェック
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  # ユニットテスト
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run unit tests
      run: go test -v ./tests -run "TestProvider|TestProvider_impl|TestProviderSchema" -coverprofile=coverage.out
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  # アクセプタンステスト
  acceptance-tests:
    runs-on: ubuntu-latest
    needs: [lint, unit-tests]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.0'
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run acceptance tests
      run: TF_ACC=1 go test -v ./tests -timeout 10m
      env:
        TF_ACC: 1

  # マトリックステスト（複数Goバージョン）
  matrix-tests:
    runs-on: ${{ matrix.os }}
    needs: [lint]
    strategy:
      matrix:
        go-version: ['1.20', '1.21', '1.22']
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v ./tests -run "TestProvider|TestProvider_impl|TestProviderSchema"

  # ビルドとリリース
  build:
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, acceptance-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    
    - name: Build provider
      run: |
        go build -o terraform-provider-eve-ng
        chmod +x terraform-provider-eve-ng
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: terraform-provider-eve-ng-${{ github.sha }}
        path: terraform-provider-eve-ng
        retention-days: 30

  # リリース作成
  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'release'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: terraform-provider-eve-ng-${{ github.sha }}
        path: ./dist
    
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: ./dist/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
