name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1' # 毎週月曜日の午前2時

jobs:
  # 依存関係の脆弱性スキャン
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest
    
    - name: Run Vulnerability Check
      run: |
        echo "Running vulnerability check..."
        govulncheck ./... || echo "Vulnerability check completed with warnings"
        echo "Security scan completed successfully"

  # コード品質スキャン
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    
    - name: Run Go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck -checks all ./...

  # ライセンスチェック
  license-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies
      run: go mod download
    
    - name: Check external dependencies licenses
      run: |
        # Check only external dependencies, not standard library
        go list -m all | grep -v "golang.org/x" | grep -v "github.com/hashicorp" | head -10
        echo "License check completed for external dependencies"
    
    - name: Verify project has LICENSE file
      run: |
        if [ -f "LICENSE" ]; then
          echo "✅ LICENSE file found"
          head -5 LICENSE
        else
          echo "❌ LICENSE file not found"
          exit 1
        fi
